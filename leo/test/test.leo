<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: https://leo-editor.github.io/leo-editor/leo_toc.html -->
<leo_file xmlns:leo="https://leo-editor.github.io/leo-editor/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2"/>
<globals/>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="ekr.20180311131353.1"><vh>test.leo: semi-official tests</vh></v>
<v t="ekr.20230622114548.1"><vh>@settings</vh>
<v t="ekr.20231231164138.1"><vh>@data unl-path-prefixes</vh></v>
<v t="ekr.20230623064935.1"><vh>@data history-list</vh></v>
<v t="ekr.20230622114556.1"><vh>@button copy-test</vh></v>
<v t="ekr.20180311210803.1"><vh>Latex buttons</vh>
<v t="ekr.20180311195905.1"><vh>@@button Create LaTeX</vh></v>
<v t="ekr.20180311200239.1"><vh>@@clean c:\test\latex_test.tex</vh>
<v t="ekr.20180311200312.1"><vh>level 1</vh>
<v t="ekr.20180311200318.1"><vh>level 2</vh></v>
</v>
</v>
</v>
</v>
<v t="ekr.20180319044254.1"><vh>Viewrendered examples</vh>
<v t="ekr.20180319044254.2"><vh>Python code</vh></v>
<v t="ekr.20180319044254.3"><vh>@graphics-script</vh></v>
<v t="ekr.20180319044254.4"><vh>@html display Leo tree (cool)</vh></v>
<v t="ekr.20180319044254.5"><vh>@html Leo's home page</vh></v>
<v t="ekr.20180319044254.6"><vh>@image LeoSplash</vh></v>
<v t="ekr.20180319044254.7"><vh>@image splash screen</vh></v>
<v t="ekr.20180319044254.8"><vh>@movie Gayane Ballet (Local file)</vh></v>
<v t="ekr.20180319044254.9"><vh>@movie Gayane Ballet (Url)</vh></v>
<v t="ekr.20180319044254.10"><vh>@movie Sample video (Local file)</vh></v>
<v t="ekr.20180319044254.11"><vh>@movie Sample video (Url)</vh></v>
<v t="ekr.20180319044254.12"><vh>@networkx my network</vh></v>
<v t="ekr.20180319044254.13"><vh>@pyplot matplotlib animate_decay</vh>
<v t="ekr.20180319044254.14"><vh>data_gen</vh></v>
<v t="ekr.20180319044254.15"><vh>init</vh></v>
<v t="ekr.20180319044254.16"><vh>run</vh></v>
</v>
<v t="ekr.20180319044254.17"><vh>@pyplot basic_example</vh>
<v t="ekr.20180319044254.18"><vh>Figure 1</vh></v>
<v t="ekr.20180319044254.19"><vh>Figure 2</vh></v>
</v>
<v t="ekr.20180319044254.20"><vh>@pyplot barchar_demo</vh></v>
<v t="ekr.20180319044254.21"><vh>@svg bubbles sources</vh></v>
<v t="ekr.20180319044254.22"><vh>@svg bubbles.svg</vh></v>
<v t="ekr.20180319044254.23"><vh>@url Leo's home page (md default)</vh></v>
<v t="ekr.20180319044254.24"><vh>@url Leo's home page (md explicit)</vh></v>
<v t="ekr.20180319044254.25"><vh>@url Leo's home page (rST default)</vh></v>
<v t="ekr.20180319044254.26"><vh>@url Leo's home page (rST explicit)</vh></v>
<v t="ekr.20180319044254.27"><vh>@url weather (md default)</vh></v>
<v t="ekr.20180319044254.28"><vh>@url weather (rst default)</vh></v>
<v t="ekr.20180319044254.29"><vh>docstring test</vh></v>
<v t="ekr.20180319044254.30"><vh>markdown test (including url)</vh></v>
<v t="ekr.20180319044254.31"><vh>rst test (including url)</vh></v>
</v>
<v t="ekr.20180311131424.1"><vh>Recent tests</vh>
<v t="ekr.20180311131403.1"><vh>@jupyter</vh></v>
<v t="ekr.20180311212134.1"><vh>Coloring tests</vh>
<v t="ekr.20180311131449.1"><vh>Syntax coloring template</vh></v>
<v t="ekr.20180311212134.2"><vh>g.es test</vh></v>
<v t="ekr.20180311212134.3"><vh>g.error/note/warning test</vh></v>
</v>
<v t="ekr.20230713145509.1"><vh>test of parse-body</vh></v>
<v t="ekr.20230713173540.1"><vh>test of tree abbreviations</vh></v>
<v t="ekr.20230714023025.1"><vh>script: diff-branches/revs (one file)</vh></v>
<v t="ekr.20230906100141.3"><vh>pyscript code (requires VR3)</vh></v>
<v t="ekr.20230906100141.4"><vh>--- nodes with various kinds of gnx</vh>
<v t="ekr.20230906100141.5"><vh>test ksuid</vh></v>
<v t="ekr.20230906100141.6"><vh>test uuid</vh></v>
<v t="ekr.20230906100141.7"><vh>test legacy gnx</vh></v>
</v>
<v t="ekr.20230906100141.8"><vh>script: change body font</vh></v>
<v t="ekr.20230906100141.9"><vh>script: unchange body font</vh></v>
<v t="ekr.20230906100141.11"><vh>--- colorizing</vh>
<v t="ekr.20230906100141.12"><vh>colorizer test</vh>
<v t="ekr.20230906100141.13"><vh>&lt;&lt; defined section &gt;&gt;</vh></v>
</v>
<v t="ekr.20230906100141.14"><vh>html/js test</vh></v>
<v t="ekr.20230906100141.15"><vh>html/js test</vh></v>
<v t="ekr.20230906100141.16"><vh>javascript test</vh></v>
<v t="ekr.20230906100141.17"><vh>test of @language json</vh></v>
<v t="ekr.20230906100141.18"><vh>test of @language md</vh></v>
<v t="ekr.20230906100141.21"><vh>test of @language python</vh>
<v t="ekr.20230906100141.22"><vh>&lt;&lt; exists &gt;&gt;</vh></v>
</v>
<v t="ekr.20230906100141.21"></v>
<v t="ekr.20230906100141.23"><vh>test of @language rest</vh></v>
</v>
<v t="ekr.20230906100141.24"><vh>script: asttokens</vh></v>
<v t="ekr.20230906100141.25"><vh>QToolBar test</vh></v>
</v>
<v t="ekr.20231231164138.1"></v>
<v t="ekr.20230622112641.1"><vh>--- tests of UNL (do not delete!)</vh>
<v t="ekr.20140723122936.18139"><vh>@file ../plugins/importers/__init__.py</vh></v>
<v t="ekr.20230622112535.1"><vh>@clean ../plugins/leo_babel/__init__.py</vh></v>
<v t="ekr.20230622112649.1"><vh>Error messages (copy to log)</vh></v>
<v t="ekr.20230625084119.1"><vh>Legacy UNLs: in this file</vh></v>
<v t="ekr.20230628090119.1"><vh>Legacy UNLs: other files</vh></v>
<v t="ekr.20230623141357.1"><vh>URLs and UNLs: </vh></v>
<v t="ekr.20231231043342.1"><vh>New UNLs with empty file parts</vh></v>
<v t="ekr.20230627150454.1"><vh>New UNLs with short file parts</vh></v>
<v t="ekr.20240226115140.1"><vh>New UNLs with relative file parts</vh></v>
<v t="ekr.20230707065449.1"><vh>New UNLS with long(absolute) file parts</vh></v>
</v>
</vnodes>
<tnodes>
<t tx="ekr.20180311131353.1" str_leo_pos="3,11"></t>
<t tx="ekr.20180311131403.1">file:///c:/Test/04_Neural_Networks.ipynb
</t>
<t tx="ekr.20180311131424.1"></t>
<t tx="ekr.20180311131449.1">@language python

@ doc part (colored as **markdown**)
@c

def spam():
    '''Docstring'''
    # Comment.
    a = 'Regular string'

    </t>
<t tx="ekr.20180311195905.1">@language python

"""
Changes LaTeX section definition levels in the subtree of an @clean file node to their subtree level.
Only one LaTeX section level can therefore be used within a single node body.
"""

import re

section_levels = {
    1: 'chapter',
    2: 'section',
    3: 'subsection',
    4: 'subsubsection',
    5: 'paragraph',
    6: 'subparagraph'
}

def latex_convert_section_levels(p, adjusted_level_name):
    """ Replaces LaTeX section definition levels found on a single line (re multiline mode).
    Returns the modified node body."""
    return re.sub(r'\\(chapter|section|subsection|subsubsection|paragraph|subparagraph)(\[.*?\])?({.*})',
        r'\\'+adjusted_level_name+r'\g&lt;2&gt;\g&lt;3&gt;', p.b, re.M)

u, undoType = c.undoer, 'change-latex'
h = p.h.strip()
if g.match_word(h, 0, '@clean') and h.endswith('.tex'):
    bunch = u.beforeChangeTree(c.p)
    changed, dirtyVnodeList = 0, []
    root_level = p.level()
    for p in p.subtree():
        level = p.level() - root_level
        if level &lt; 7:
            level_name = section_levels[level]
        else:
            level_name = 'subparagraph'
        s = latex_convert_section_levels(p, level_name)
        if s != p.b:
            bunch2 = u.beforeChangeNodeContents(p)
            p.b = s
            u.afterChangeNodeContents(p, undoType, bunch2, dirtyVnodeList=dirtyVnodeList)
            p.v.setDirty()
            changed += 1
    if changed:
        u.afterChangeTree(c.p, undoType, bunch)
        g.es('Changed %s node%s.' % (changed, g.plural(changed)))
    else:
        g.es('No nodes changed')
else:
    g.es('not a LaTeX file node?')</t>
<t tx="ekr.20180311200239.1">@language tex
@others
</t>
<t tx="ekr.20180311200312.1">\paragraph{one}

</t>
<t tx="ekr.20180311200318.1">\paragraph{two}


</t>
<t tx="ekr.20180311210803.1"></t>
<t tx="ekr.20180311212134.1"></t>
<t tx="ekr.20180311212134.2">table = (
    # g.actualColor calls 
    'error', 'info', 'warning',
    'black', 'white',
    'xxx',
    'firebrick', 'grey', 'pink', 'purple', # Tk colors.
    # Solarized colors...
    'blue', 'cyan', 'green','magenta', 'orange', 'red',
    'violet', 'yellow',
)
for s in table:
    g.es(s, color=s)
</t>
<t tx="ekr.20180311212134.3"># g.cls()
g.error('error')
g.note('note')
g.warning('warning')
g.blue('blue')
g.red('red')
g.es_print('test')
g.es_print('black',color='black')</t>
<t tx="ekr.20180319044254.1"></t>
<t tx="ekr.20180319044254.10">C:\Users\edreamleo\SampleVideo_1280x720_1mb.mp4
</t>
<t tx="ekr.20180319044254.11">http://www.sample-videos.com/video/mp4/720/big_buck_bunny_720p_1mb.mp4

# This *does* play.</t>
<t tx="ekr.20180319044254.12"></t>
<t tx="ekr.20180319044254.13"># http://matplotlib.org/1.5.1/examples/animation/animate_decay.html
np = matplotlib = None
try:
    import numpy as np
except Exception:
    g.es_print('Can not import numpy')
try:
    import matplotlib.pyplot as plt
    import matplotlib.animation as animation
except Exception:
    g.es_print('Can not import matplotlib')

@others

# global data.
if np and matplotlib:
    fig, ax = plt.subplots()
    line, = ax.plot([], [], lw=2)
    ax.grid()
    xdata, ydata = [], []
    ani = animation.FuncAnimation(
        fig, run, data_gen, blit=False, interval=10,
        repeat=False, init_func=init)
    
    plt.ion()
        # sets interactive mode. Prevents this message:
        # QCoreApplication::exec: The event loop is already running
    plt.show()</t>
<t tx="ekr.20180319044254.14">def data_gen(t=0):
    cnt = 0
    while cnt &lt; 1000:
        cnt += 1
        t += 0.1
        yield t, np.sin(2*np.pi*t) * np.exp(-t/10.)
</t>
<t tx="ekr.20180319044254.15">def init():
    ax.set_ylim(-1.1, 1.1)
    ax.set_xlim(0, 10)
    del xdata[:]
    del ydata[:]
    line.set_data(xdata, ydata)
    return line,
</t>
<t tx="ekr.20180319044254.16">def run(data):
    # update the data
    t, y = data
    xdata.append(t)
    ydata.append(y)
    xmin, xmax = ax.get_xlim()
    if t &gt;= xmax:
        ax.set_xlim(xmin, 2*xmax)
        ax.figure.canvas.draw()
    line.set_data(xdata, ydata)
    return line,</t>
<t tx="ekr.20180319044254.17"># http://matplotlib.org/1.5.1/examples/animation/basic_example.html
if 0:
    import numpy as np
    import matplotlib.pyplot as plt
    import matplotlib.animation as animation

@others

if 0:
    plt.ion()
    # sets interactive mode. Prevents this message:
    # QCoreApplication::exec: The event loop is already running
plt.show()</t>
<t tx="ekr.20180319044254.18">if 1:
    
    def update_line(num, data, line):
        line.set_data(data[..., :num])
        return line, # a tuple.

    fig1 = plt.figure()
    data = np.random.rand(2, 25)
    l, = plt.plot([], [], 'r-')
    plt.xlim(0, 1)
    plt.ylim(0, 1)
    plt.xlabel('x')
    plt.title('test')
    line_ani = animation.FuncAnimation(fig1, update_line, 25,
        fargs=(data, l),
        interval=50,
        blit=True)
</t>
<t tx="ekr.20180319044254.19">fig2 = plt.figure()
x = np.arange(-9, 10)
y = np.arange(-9, 10).reshape(-1, 1)
base = np.hypot(x, y)
ims = []
for add in np.arange(15):
    ims.append((plt.pcolor(x, y, base + add, norm=plt.Normalize(0, 30)),))
animation.ArtistAnimation(fig2, ims,
    interval=50,
    repeat_delay=3000,
    blit=True)
#im_ani.save('im.mp4', metadata={'artist':'Guido'})</t>
<t tx="ekr.20180319044254.2">@language python

def spam():
    '''This is a docstring.'''
    pass</t>
<t tx="ekr.20180319044254.20">#!/usr/bin/env python
# a bar plot with errorbars
import numpy as np
import matplotlib.pyplot as plt

N = 5
menMeans = (20, 35, 30, 35, 27)
menStd = (2, 3, 4, 1, 2)

ind = np.arange(N)  # the x locations for the groups
width = 0.35       # the width of the bars

fig, ax = plt.subplots()

rects1 = ax.bar(ind, menMeans, width, color='r', yerr=menStd)

womenMeans = (25, 32, 34, 20, 25)
womenStd = (3, 5, 2, 3, 3)
rects2 = ax.bar(ind + width, womenMeans, width, color='y', yerr=womenStd)

# add some text for labels, title and axes ticks
ax.set_ylabel('Scores')
ax.set_title('Scores by group and gender')
ax.set_xticks(ind + width)
ax.set_xticklabels(('G1', 'G2', 'G3', 'G4', 'G5'))

ax.legend((rects1[0], rects2[0]), ('Men', 'Women'))


def autolabel(rects):
    # attach some text labels
    for rect in rects:
        height = rect.get_height()
        ax.text(rect.get_x() + rect.get_width()/2., 1.05*height,
                '%d' % int(height),
                ha='center', va='bottom')

autolabel(rects1)
autolabel(rects2)

plt.ion()
    # sets interactive mode. Prevents this message:
    # QCoreApplication::exec: The event loop is already running
plt.show()</t>
<t tx="ekr.20180319044254.21">@nocolor-node
&lt;?xml version="1.0" standalone="no"?&gt;
&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"&gt;
&lt;svg width="20cm" height="15cm" viewBox="0 0 800 600"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlik/"
     baseProfile="tiny" version="1.2"&gt;
   &lt;title&gt;Spheres&lt;/title&gt;
   &lt;desc&gt;Semi-transparent bubbles on a colored background.&lt;/desc&gt;
     &lt;defs&gt;
       &lt;!-- Create radial gradients for each bubble. --&gt;
       &lt;radialGradient id="blueBubble" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" stop-opacity="1" /&gt;
         &lt;stop offset="25%" stop-color="#cdcdff" stop-opacity=".65" /&gt;
         &lt;stop offset="100%" stop-color="#cdaacd" stop-opacity=".75" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="redBubble" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" stop-opacity="1" /&gt;
         &lt;stop offset="25%" stop-color="#ffcdcd" stop-opacity=".65" /&gt;
         &lt;stop offset="100%" stop-color="#bbbb99" stop-opacity=".75" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="greenBubble" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" stop-opacity="1" /&gt;
         &lt;stop offset="25%" stop-color="#cdffcd" stop-opacity=".65" /&gt;
         &lt;stop offset="100%" stop-color="#99aaaa" stop-opacity=".75" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="yellowBubble" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" stop-opacity="1" /&gt;
         &lt;stop offset="25%" stop-color="#ffffcd" stop-opacity=".65" /&gt;
         &lt;stop offset="100%" stop-color="#bbbbaa" stop-opacity=".75" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="background" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="400" fx="250" fy="250"&gt;
         &lt;stop offset="0%" stop-color="#ffffee" /&gt;
         &lt;stop offset="100%" stop-color="#ccccaa" /&gt;
       &lt;/radialGradient&gt;
       &lt;linearGradient id="surface" gradientUnits="userSpaceOnUse"
                       x1="-100" y1="200" x2="400" y2="200"&gt;
         &lt;stop offset="0%" stop-color="#ffffcc" /&gt;
         &lt;stop offset="100%" stop-color="#bbbb88" /&gt;
       &lt;/linearGradient&gt;

       &lt;!-- Create radial gradients for each circle to make them look like
            spheres. --&gt;
       &lt;radialGradient id="blueSphere" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" /&gt;
         &lt;stop offset="75%" stop-color="blue" /&gt;
         &lt;stop offset="100%" stop-color="#222244" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="redSphere" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" /&gt;
         &lt;stop offset="75%" stop-color="red" /&gt;
         &lt;stop offset="100%" stop-color="#442222" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="greenSphere" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" /&gt;
         &lt;stop offset="75%" stop-color="green" /&gt;
         &lt;stop offset="100%" stop-color="#113311" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="yellowSphere" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="-50"&gt;
         &lt;stop offset="0%" stop-color="white" /&gt;
         &lt;stop offset="75%" stop-color="yellow" /&gt;
         &lt;stop offset="100%" stop-color="#444422" /&gt;
       &lt;/radialGradient&gt;
       &lt;radialGradient id="shadowGrad" gradientUnits="userSpaceOnUse"
                       cx="0" cy="0" r="100" fx="-50" fy="50"&gt;
         &lt;stop offset="0%" stop-color="black" stop-opacity="1.0" /&gt;
         &lt;stop offset="100%" stop-color="black" stop-opacity="0.0" /&gt;
       &lt;/radialGradient&gt;

       &lt;!-- Define a shadow for each sphere. --&gt;
       &lt;circle id="shadow" fill="url(#shadowGrad)" cx="0" cy="0" r="100" /&gt;
       &lt;g id="bubble"&gt;
         &lt;circle fill="black" cx="0" cy="0" r="50" /&gt;
         &lt;circle fill="#a6ce39" cx="0" cy="0" r="33" /&gt;
         &lt;path fill="black" d="M 37,50 L 50,37 L 12,-1 L 22,-11 L 10,-24 L -24,10
                               L -11,22 L -1,12 Z" /&gt;
         &lt;circle cx="0" cy="0" r="100" /&gt;
       &lt;/g&gt;
     &lt;/defs&gt;
   &lt;g&gt;
     &lt;rect fill="url(#background)" x="0" y="0" width="800" height="600" /&gt;
   &lt;/g&gt;

   &lt;g transform="translate(200,700)"&gt;
     &lt;use xlink:href="#bubble" fill="url(#blueBubble)" /&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="1s" dur="10s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(315,700)"&gt;
     &lt;g transform="scale(0.5,0.5)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#redBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="3s" dur="7s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(80,700)"&gt;
     &lt;g transform="scale(0.65,0.65)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#greenBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="5s" dur="9s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(255,700)"&gt;
     &lt;g transform="scale(0.3,0.3)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#yellowBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="2s" dur="6s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(565,700)"&gt;
     &lt;g transform="scale(0.4,0.4)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#blueBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="4s" dur="8s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(715,700)"&gt;
     &lt;g transform="scale(0.6,0.6)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#redBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="1s" dur="4s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(645,700)"&gt;
     &lt;g transform="scale(0.375,0.375)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#greenBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="0s" dur="11s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(555,700)"&gt;
     &lt;g transform="scale(0.9,0.9)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#yellowBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="3s" dur="7.5s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;

   &lt;g transform="translate(360,700)"&gt;
     &lt;g transform="scale(0.5,0.5)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#blueBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="3s" dur="6s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(215,700)"&gt;
     &lt;g transform="scale(0.45,0.45)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#redBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="5.5s" dur="7s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(420,700)"&gt;
     &lt;g transform="scale(0.75,0.75)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#greenBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="1s" dur="9s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;
   &lt;g transform="translate(815,700)"&gt;
     &lt;g transform="scale(0.6,0.6)"&gt;
       &lt;use xlink:href="#bubble" fill="url(#yellowBubble)" /&gt;
     &lt;/g&gt;
     &lt;animateTransform attributeName="transform" type="translate" additive="sum"
         values="0,0; 0,-800" begin="2s" dur="9.5s" fill="freeze" repeatCount="indefinite" /&gt;
   &lt;/g&gt;

   &lt;g transform="translate(225,375)" &gt;
     &lt;g transform="scale(1.0,0.5)" &gt;
       &lt;path d="M 0 0 L 350 0 L 450 450 L -100 450 z"
             fill="url(#surface)" stroke="none" /&gt;
     &lt;/g&gt;
   &lt;/g&gt;
     &lt;g transform="translate(200,0)" &gt;
     &lt;g transform="translate(200,490) scale(2.0,1.0) rotate(45)" &gt;
       &lt;rect fill="#a6ce39" x="-69" y="-69" width="138" height="138" /&gt;
       &lt;circle fill="black" cx="0" cy="0" r="50" /&gt;
       &lt;circle fill="#a6ce39" cx="0" cy="0" r="33" /&gt;
       &lt;path fill="black" d="M 37,50 L 50,37 L 12,-1 L 22,-11 L 10,-24 L -24,10
                             L -11,22 L -1,12 Z" /&gt;
       &lt;animateTransform attributeName="transform"  type="rotate" additive="sum" values="0; 360"
                  begin="0s" dur="10s" fill="freeze" repeatCount="indefinite" /&gt;
     &lt;/g&gt;
     &lt;g transform="translate(200,375)"&gt;
       &lt;use xlink:href="#shadow" transform="translate(25,55) scale(1.0,0.5)" /&gt;
       &lt;circle fill="url(#blueSphere)" cx="0" cy="0" r="100" /&gt;
     &lt;/g&gt;
     &lt;g transform="translate(315,440)"&gt;
       &lt;g transform="scale(0.5,0.5)"&gt;
         &lt;use xlink:href="#shadow" transform="translate(25,55) scale(1.0,0.5)" /&gt;
         &lt;circle fill="url(#redSphere)" cx="0" cy="0" r="100" /&gt;
       &lt;/g&gt;
     &lt;/g&gt;
     &lt;g transform="translate(80,475)"&gt;
       &lt;g transform="scale(0.65,0.65)"&gt;
         &lt;use xlink:href="#shadow" transform="translate(25,55) scale(1.0,0.5)" /&gt;
         &lt;circle fill="url(#greenSphere)" cx="0" cy="0" r="100" /&gt;
       &lt;/g&gt;
     &lt;/g&gt;
     &lt;g transform="translate(255,525)"&gt;
       &lt;g transform="scale(0.3,0.3)"&gt;
         &lt;use xlink:href="#shadow" transform="translate(25,55) scale(1.0,0.5)" /&gt;
         &lt;circle fill="url(#yellowSphere)" cx="0" cy="0" r="100" /&gt;
       &lt;/g&gt;
     &lt;/g&gt;
   &lt;/g&gt;
&lt;/svg&gt;</t>
<t tx="ekr.20180319044254.22">c:\leo.repo\leo-editor\leo\Icons\bubbles.svg
</t>
<t tx="ekr.20180319044254.23">[Leo's home page](http://leoeditor.com/)
</t>
<t tx="ekr.20180319044254.24">@language md
@wrap

[Leo's home page](http://leoeditor.com/)
</t>
<t tx="ekr.20180319044254.25">`Leo's home page &lt;http://leoeditor.com/&gt;`_

</t>
<t tx="ekr.20180319044254.26">@language rest
@wrap

`Leo's home page &lt;http://leoeditor.com/&gt;`_

</t>
<t tx="ekr.20180319044254.27">[weather.com](http://www.weather.com/weather/today/Madison+WI+53705?from=hp_promolocator&amp;lswe=53705&amp;lwsa=Weather36HourHealthCommand)
</t>
<t tx="ekr.20180319044254.28">`weather.com &lt;http://www.weather.com/weather/today/Madison+WI+53705?from=hp_promolocator&amp;lswe=53705&amp;lwsa=Weather36HourHealthCommand&gt;`_
</t>
<t tx="ekr.20180319044254.29">@language rest
@wrap

''' Creates a window for *live* rendering of rst, html, etc.  (Qt only).

Commands
========

viewrendered.py creates the following (``Alt-X``) commands:

``viewrendered``
    opens a new window where the current body text is rendered as HTML
    (if it starts with '&lt;'), or otherwise reStructuredText.
``viewrendered-big``
    as above, but zoomed in, useful for presentations
``viewrendered-html``
    displays the html source generated from reStructuredText, useful for
    debugging

``viewrendered`` sets the process current directory (os.chdir()) to the path
to the node being rendered, to allow relative paths to work in
``.. image::`` directives.

reStructuredText errors and warnings may be shown.  For example, both::

    Heading
    -------

    `This` is **really** a line of text.

and::

    &lt;h1&gt;Heading&lt;h1&gt;

    &lt;tt&gt;This&lt;/tt&gt; is &lt;b&gt;really&lt;/b&gt; a line of text.

will look something like:

**Heading**

`This` is **really** a line of text.

Settings
========

@string view-rendered-default-kind = rst
----------------------------------------

The default kind of rendering.  One of (big,rst,html)
    
@bool view-rendered-auto-create = False
---------------------------------------

When True, the plugin will create a rendering pane automatically.

'''
</t>
<t tx="ekr.20180319044254.3" _bklnk="7d71002858010000007971014b0058010000007871024b00580400000074797065710358080000006e6f646552656374710458050000006c696e6b7371055d7106752e">gs.clear()
gs.addText('\n%s\n%s' % (gv,gs))

if 0:
    for i in range(50):
        gs.addText('\n' * i +'More')
</t>
<t tx="ekr.20180319044254.30">@language md

# Title

This is **bold** and *italics*.

More info at [Leo's home page](&lt;http://leoeditor.com/).

### Section

- Bullet list
- Another item
- Third item.
</t>
<t tx="ekr.20180319044254.31">@language rest

#####
Title
#####

This is **bold** and *italics*.

More info at `Leo's home page &lt;http://leoeditor.com/&gt;`_.

Section
=======

- Bullet list
- Another item
- Third item.</t>
<t tx="ekr.20180319044254.4">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
ul.leo-tree-example  {
    background-color: #ffffec;
    zoom: 150%; # blurs icons a bit.
}
ul.leo-tree-example li {
    background-repeat: no-repeat;
    background-position: 0px 5px;
    padding-left: 27px;
}
li {
    background-image:
url('https://raw.github.com/vivainio/leo/master/leo/Icons/box00.GIF');
    background-repeat: no-repeat;
    background-position: 0px 5px;
    padding-left: 27px;
}
li.selected {
    background-color: lightgrey;
}
li.leaf {
    list-style-type: none;
}
li.plus {
  list-style-image: url('http://leoeditor.com/plusnode.gif')
}
li.minus {
  list-style-image: url('http://leoeditor.com/minusnode.gif')
}
li.leaf {
  background-image: url('http://leoeditor.com/box00.GIF')
}
li.body {
  background-image: url('http://leoeditor.com/box01.GIF')
}
li.mark {
  background-image: url('http://leoeditor.com/box02.GIF')
}
li.mark-body {
  background-image: url('http://leoeditor.com/box03.GIF')
}
li.clone {
  background-image: url('http://leoeditor.com/box04.GIF')
}
li.clone-body {
  background-image: url('http://leoeditor.com/box05.GIF')
}
li.clone-mark {
  background-image: url('http://leoeditor.com/box06.GIF')
}
li.clone-mark-body {
  background-image: url('http://leoeditor.com/box07.GIF')
}
li.dirty {
  background-image: url('http://leoeditor.com/box08.GIF')
}
li.dirty-body {
  background-image: url('http://leoeditor.com/box09.GIF')
}
li.dirty-mark {
  background-image: url('http://leoeditor.com/box10.GIF')
}
li.dirty-mark-body {
  background-image: url('http://leoeditor.com/box11.GIF')
}
li.dirty-clone {
  background-image: url('http://leoeditor.com/box12.GIF')
}
li.dirty-clone-body {
  background-image: url('http://leoeditor.com/box13.GIF')
}
li.dirty-clone-mark {
  background-image: url('http://leoeditor.com/box14.GIF')
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;ul class="leo-tree-example"&gt;
&lt;li class='plus clone-mark'&gt;
test
&lt;/li&gt;
&lt;ul&gt;
  &lt;li class='plus clone-body'&gt;
  child
  &lt;/li&gt;
  &lt;ul&gt;
    &lt;li class='leaf body'&gt;
    grandchild
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;li class='plus clone-body'&gt;
  child
  &lt;/li&gt;
  &lt;ul&gt;
    &lt;li class='leaf body'&gt;
    grandchild
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;</t>
<t tx="ekr.20180319044254.5">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;!--@+leo-ver=5-thin--&gt;
&lt;!--@+node:ekr.20100808060203.4273: * @thin html/front.html--&gt;
&lt;!--@@first--&gt;
&lt;!--@@first--&gt;

&lt;!--@@language html--&gt;
&lt;!--@@tabwidth -2--&gt;

&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
    &lt;!--@+&lt;&lt; head &gt;&gt;--&gt;
    &lt;!--@+node:ekr.20100808060203.4274: ** &lt;&lt; head &gt;&gt;--&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

    &lt;title&gt;Leo's Home Page&lt;/title&gt;
    &lt;link rel="stylesheet" href="_static/default.css" type="text/css" /&gt;
    &lt;link rel="stylesheet" href="_static/silver_city.css" type="text/css" /&gt;
    &lt;!--
    &lt;script type="text/javascript"&gt;
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '',
        VERSION:     '4.7-final',
        COLLAPSE_MODINDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  false
      };
    &lt;/script&gt;
    --&gt;
    &lt;!-- &lt;script type="text/javascript" src="_static/jquery.js"&gt;&lt;/script&gt;--&gt;
    &lt;!-- &lt;script type="text/javascript" src="_static/doctools.js"&gt;&lt;/script&gt;--&gt;
    &lt;link rel="top" title="Leo v4.7-final documentation" href="index.html" /&gt;
    &lt;link rel="Users Guide" title="Leo&amp;#8217;s Users Guide" href="leo_toc.html" /&gt;
    &lt;!-- &lt;link rel="prev" title="Chapter 5: Using LeoÃ¢â‚¬â„¢s Commands" href="commands.html" /&gt;--&gt; 
    &lt;!--@-&lt;&lt; head &gt;&gt;--&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;!--@+&lt;&lt; div top nav &gt;&gt;--&gt;
    &lt;!--@+node:ekr.20100808060203.4276: ** &lt;&lt; div top nav &gt;&gt;--&gt;
    &lt;div class="related"&gt;
      &lt;h3&gt;Navigation&lt;/h3&gt;
      &lt;ul&gt;
        &lt;li class="right" style="margin-right: 10px"&gt;
          &lt;a href="genindex.html" title="General Index"
             accesskey="I"&gt;index&lt;/a&gt;&lt;/li&gt;
        &lt;li class="right" &gt;
          &lt;a href="leo_toc.html" title="Leo&amp;#8217;s Users Guide"
             accesskey="N"&gt;contents&lt;/a&gt; |&lt;/li&gt;
        &lt;!--
        &lt;li class="right" &gt;
          &lt;a href="commands.html" title="Chapter 5: Using Leo&amp;#8217;s Commands"
             accesskey="P"&gt;previous&lt;/a&gt; |&lt;/li&gt;
        --&gt;
        &lt;li&gt;&lt;a href="leo_toc.html"&gt;Leo v4.7-final documentation&lt;/a&gt; &amp;raquo;&lt;/li&gt;

      &lt;/ul&gt;
    &lt;/div&gt;
    &lt;!--@-&lt;&lt; div top nav &gt;&gt;--&gt;
    &lt;div class="document"&gt;
      &lt;div class="documentwrapper"&gt;
        &lt;div class="bodywrapper"&gt;
          &lt;div class="body"&gt;
            &lt;!--@+&lt;&lt; div outer section &gt;&gt;--&gt;
            &lt;!--@+node:ekr.20100808060203.4286: ** &lt;&lt; div outer section &gt;&gt;--&gt;
            &lt;div class="section" id="Leo&amp;#8217;s Home page"&gt;

                &lt;h1&gt;Leo&amp;#8217;s Home Page&lt;/h1&gt;

                Leo is...

                &lt;!--@+&lt;&lt; what is Leo list &gt;&gt;--&gt;
                &lt;!--@+node:ekr.20100808060203.4288: *3* &lt;&lt; what is Leo list &gt;&gt;--&gt;
                &lt;li&gt;
                    An outline-oriented &lt;i&gt;browser&lt;/i&gt; and &lt;i&gt;project manager&lt;/i&gt; that organizes&lt;br&gt;
                    programs, web sites, URL's, pictures, movies or any other kind of data.&lt;br&gt;
                    You can organize your data in as many ways as you like within a &lt;i&gt;single&lt;/i&gt; outline.&lt;/li&gt;
                &lt;li&gt;
                    A &lt;i&gt;programmer's editor&lt;/i&gt; that fully integrates outline structure with programming.
                    &lt;!--
                    &lt;a HREF="http://www.eecs.harvard.edu/~nr/noweb/"&gt;noweb&lt;/a&gt; and
                    &lt;a HREF="http://www-cs-faculty.stanford.edu/~knuth/cweb.html"&gt;CWEB&lt;/a&gt; markup.&lt;/li&gt;
                    --&gt;
                &lt;li&gt;
                    &lt;i&gt;Fully scriptable&lt;/i&gt; using &lt;a HREF="http://www.python.org/"&gt;Python&lt;/a&gt;.
                    Leo's core is 100% pure Python.&lt;/li&gt;
                &lt;li&gt;
                    &lt;i&gt;Portable&lt;/i&gt;. Leo runs on Windows, Linux and MacOS X.&lt;br&gt;
                    Leo requires either the
                    &lt;a HREF="http://docs.python.org/library/tkinter.html"&gt;Tkinter&lt;/a&gt; or
                    &lt;a HREF="http://www.riverbankcomputing.co.uk/software/pyqt/intro"&gt;PyQt&lt;/a&gt; widget set.&lt;br&gt;
                    Leo's outline files are &lt;a HREF="http://www.w3.org/XML/"&gt;XML&lt;/a&gt; format.&lt;/li&gt;
                &lt;li&gt;
                    &lt;a href="http://www.opensource.org/"&gt;&lt;i&gt;Open Software&lt;/i&gt;&lt;/a&gt;,
                    distributed under the
                    &lt;a href="http://www.opensource.org/licenses/mit-license.php/"&gt;MIT License&lt;/a&gt;.&lt;/li&gt;
                &lt;!--@-&lt;&lt; what is Leo list &gt;&gt;--&gt;
                &lt;!-- div body toc --&gt;
                &lt;!-- &lt; &lt; inner sections &gt; &gt; --&gt;

                &lt;p&gt;Leo has an active community of helpful users and developers.&lt;br&gt;
                Please use the &lt;a href="http://groups.google.com/group/leo-editor"&gt;leo-editor&lt;/a&gt;
                group to ask questions and make suggestions.&lt;/p&gt;

                &lt;p&gt;Leo's author is &lt;a HREF="ekr.html"&gt;Edward K. Ream&lt;/a&gt;&lt;/p&gt;

            &lt;/div&gt;
            &lt;!--@-&lt;&lt; div outer section &gt;&gt;--&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!--@+&lt;&lt; sidebar &gt;&gt;--&gt;
      &lt;!--@+node:ekr.20100808060203.4282: ** &lt;&lt; sidebar &gt;&gt;--&gt;
      &lt;div class="sphinxsidebar"&gt;
          &lt;div class="sphinxsidebarwrapper"&gt;
              &lt;!--@+&lt;&lt; sidebar contents &gt;&gt;--&gt;
              &lt;!--@+node:ekr.20100808060203.4283: *3* &lt;&lt; sidebar contents &gt;&gt;--&gt;
              &lt;p class="logo"&gt;&lt;a href="leo_toc.html"&gt;
                &lt;img class="logo" src="_static/Leo4-80-border.jpg" alt="Logo"/&gt;&lt;/a&gt;&lt;/p&gt;

              &lt;a class="reference external" href="intro.html"&gt;
                Read this tutorial first&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="http://www.3dtree.com/ev/e/sbooks/leo/sbframetoc_ie.htm"&gt;
                Another tutorial&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="http:screen-shots.html"&gt;
                Screen shots of Leo&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="testimonials.html"&gt;
                Quotes from Leo&amp;#8217;s Users&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external"
                href="http://sourceforge.net/project/showfiles.php?group_id=3458&amp;amp;package_id=29106"&gt;
                Download Leo&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="http://groups.google.com/group/leo-editor"&gt;
                leo-editor: Google Groups&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="http://launchpad.net/leo-editor"&gt;
                leo-editor: Launchpad&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="http://leo.zwiki.org"&gt;
                Leo&amp;#8217;s Wiki&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="http://www.mind-mapping.org/"&gt;
                Mind Mapping&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="leoLinks.html"&gt;
                More links...&lt;/a&gt;&lt;br&gt;

              &lt;!-- &lt;a class="reference external"  href="install.html"&gt;Installing Leo&lt;/a&gt;&lt;br&gt;--&gt; 
              &lt;!-- &lt;a class="reference external"  href="intro.html"&gt;Beginners Guide&lt;/a&gt;&lt;br&gt;--&gt;
              &lt;!-- &lt;a class="reference external"  href="leo_toc.html"&gt;Users Guide&lt;/a&gt;&lt;br&gt;--&gt;
              &lt;!-- &lt;a class="reference external"  href="FAQ.html"&gt;FAQ&lt;/a&gt;&lt;br&gt;--&gt;
              &lt;!--Leo&amp;#8217;s &lt;a class="reference external" href="http://www.greygreen.org/leo/"&gt;Daily snapshots&lt;/a&gt;&lt;br&gt;--&gt;
              &lt;!-- 
              &lt;h5&gt;Edward K. Ream&lt;/h5&gt;
              &lt;a class="reference external" href="ekr.html"&gt;Home&lt;/a&gt;&lt;br&gt;
              &lt;a class="reference external" href="mailto:edreamleo@gmail.com"&gt;Contact&lt;/a&gt;&lt;br&gt;
              --&gt; 
              &lt;!--@-&lt;&lt; sidebar contents &gt;&gt;--&gt;
          &lt;!-- &lt; &lt; sidebar links &gt; &gt; --&gt;
          &lt;!-- &lt; &lt; searchbox &gt; &gt; --&gt;
          &lt;/div&gt;
      &lt;/div&gt;
      &lt;!--@-&lt;&lt; sidebar &gt;&gt;--&gt;
      &lt;div class="clearer"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;!--@+&lt;&lt; div bottom nav &gt;&gt;--&gt;
    &lt;!--@+node:ekr.20100808060203.4277: ** &lt;&lt; div bottom nav &gt;&gt;--&gt;
    &lt;div class="related"&gt;
      &lt;h3&gt;Navigation&lt;/h3&gt;
      &lt;ul&gt;
        &lt;li class="right" style="margin-right: 10px"&gt;
          &lt;a href="genindex.html" title="General Index"
             &gt;index&lt;/a&gt;&lt;/li&gt;
        &lt;li class="right" &gt;
          &lt;a href="leo_toc.html" title="Leo&amp;#8217;s Users Guide"
             &gt;contents&lt;/a&gt; |&lt;/li&gt;
        &lt;!--
        &lt;li class="right" &gt;
          &lt;a href="commands.html" title="Chapter 5: Using Leo&amp;#8217;s Commands"
             &gt;previous&lt;/a&gt; |&lt;/li&gt;
        --&gt;
        &lt;li&gt;&lt;a href="leo_toc.html"&gt;Leo v4.7-final documentation&lt;/a&gt; &amp;raquo;&lt;/li&gt; 
      &lt;/ul&gt;
    &lt;/div&gt;
    &lt;!--@-&lt;&lt; div bottom nav &gt;&gt;--&gt;
    &lt;!--@+&lt;&lt; div footer &gt;&gt;--&gt;
    &lt;!--@+node:ekr.20100808060203.4278: ** &lt;&lt; div footer &gt;&gt;--&gt;
    &lt;div class="footer"&gt;
      &amp;copy; Copyright 2010, Edward K. Ream.
      Last updated on Aug 08, 2010.
      Created using &lt;a href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt; 0.6.3.
    &lt;/div&gt;
    &lt;!--@-&lt;&lt; div footer &gt;&gt;--&gt;
  &lt;/body&gt;
&lt;/html&gt;
&lt;!--@-leo--&gt;
</t>
<t tx="ekr.20180319044254.6">C:\leo.repo\leo-editor\leo\Icons\Leosplash.GIF

This is a comment</t>
<t tx="ekr.20180319044254.7">c:\leo.repo\leo-editor\leo\Icons\SplashScreen.ico

</t>
<t tx="ekr.20180319044254.8">C:\Users\edreamleo\Documents\Music\2001- A Space Odyssey [Rhino]\06 Gayane Ballet Suite.mp3</t>
<t tx="ekr.20180319044254.9">https://www.youtube.com/watch?v=EB3IokHelRk

# Doesn't play, probably because of https.</t>
<t tx="ekr.20230622112535.1"></t>
<t tx="ekr.20230622112641.1"># Note: Modify @data unl-path-prefixes (in this file)
# To match the paths on your machine.</t>
<t tx="ekr.20230622112649.1"># These links will be active only if the @&lt;file&gt; node exists.

# Absolute file names

# Exists, non-empty.
C:/Repos/leo-editor/leo/plugins/importers/__init__.py:1:0:flake8 error

# Exists, empty.
C:/Repos/leo-editor/leo/plugins/leo_babel/__init__.py:1:0:flake8 error

# Large.
# C:/Repos/leo-editor/leo/core/leoGlobals.py:100:0:flake8 error
</t>
<t tx="ekr.20230622114548.1"></t>
<t tx="ekr.20230622114556.1">h = 'Error messages (copy to log)'
p = g.findNodeAnywhere(c, h)
if p:
    lines = [z for z in g.splitLines(p.b) if not z.strip().startswith('#')]
    c.frame.log.put_html_links(''.join(lines))
else:
    print('Not found:', h)
</t>
<t tx="ekr.20230623064935.1">parse-body
diff-marked-nodes
refresh-from-disk
convert-unls
copy-test</t>
<t tx="ekr.20230623141357.1">https://github.com/leo-editor/leo-editor/pull/3215/files

# Exists: Recent tests.
unl:gnx://#ekr.20180311131424.1

# Error mssages (copy to log)
unl:gnx://#ekr.20230622112649.1

# Bad gnx
unl:gnx://xyzzy.leo#.20230622112649.1

# In LeoDocs.leo: will work only if LeoDocs.leo is open!
unl:gnx://#ekr.20100805171546.4412

</t>
<t tx="ekr.20230625084119.1"># Shorter UNL:
unl://#Coloring tests--&gt;Syntax coloring template

# Exists, non-empty.
unl://C:/Repos/leo-editor/leo/test/test.leo#@file ../plugins/importers/__init__.py
unl://#@file ../plugins/importers/__init__.py

# Exists, empty.
unl://C:/Repos/leo-editor/leo/test/test.leo#@clean ../plugins/leo_babel/__init__.py
unl://#@clean ../plugins/leo_babel/__init__.py

# Exists
unl://C:/Repos/leo-editor/leo/test/test.leo#Viewrendered examples
unl://#Viewrendered examples

unl://C:/Repos/leo-editor/leo/test/test.leo#Viewrendered examples--&gt;Python code
unl://#Viewrendered examples--&gt;Python code
</t>
<t tx="ekr.20230627150454.1"># Exists: Recent tests
unl:gnx://test.leo#ekr.20180311131424.1

# Error mssages (copy to log)
unl:gnx://test.leo#ekr.20230622112649.1

# The following links depend on @data unl-path-prefixes.

# These links should open LeoDocs.leo if it is not already open.

# In LeoDocs.leo: Leo 6.7.3 release notes
unl:gnx://LeoDocs.leo#ekr.20230409052507.1

# In LeoDocs.leo: ** Read me first **
unl:gnx://LeoDocs.leo#ekr.20050831195449

# Bad gnx: xyzzy.leo does not exist.
unl:gnx://xyzzy.leo#.20230622112649.1</t>
<t tx="ekr.20230628090119.1"># The following links depend on @data unl-path-prefixes.

unl://LeoDocs.leo#Release Notes--&gt;Leo 6.7.3 release notes

# In LeoDocs.leo
unl://LeoDocs.leo#Web pages

# In LeoDocs.leo. Will work only if LeoDocs.leo is open!
unl://#Web pages
</t>
<t tx="ekr.20230707065449.1"># These unls will work only on EKR's machine.
# They are a test of absolute matches in g.openUNLFile.

# Exists: Recent tests
unl:gnx://c:\Repos\leo-editor\leo\test\test.leo#ekr.20180311131424.1

# Error mssages (copy to log)
unl:gnx://c:\Repos\leo-editor\leo\test\test.leo#ekr.20230622112649.1

# Should fail
unl:gnx://c:\Repos\leo-editor\leo\doc\test.leo#ekr.20230622112649.1

# The following links should open LeoDocs.leo if it is not already open.

# In LeoDocs.leo: Leo 6.7.3 release notes
unl:gnx://c:\Repos\leo-editor\leo\doc\LeoDocs.leo#ekr.20230409052507.1

# In LeoDocs.leo: ** Read me first **
unl:gnx://c:\Repos\leo-editor\leo\doc\LeoDocs.leo#ekr.20050831195449

# Bad gnx: xyzzy.leo does not exist.
unl:gnx://xyzzy.leo#.20230622112649.1</t>
<t tx="ekr.20230713145509.1">def spam():
    pass

def eggs():
    pass
</t>
<t tx="ekr.20230713173540.1">demo;
importer;
mdfile;
new-unit-test;
new-unit-test;
</t>
<t tx="ekr.20230714023025.1">g.cls()
import os
import leo.commands.editFileCommands as efc
path = g.finalize_join(g.app.loadDir, '..', '..')
print('path:', path)
os.chdir(path)

# Any revspec is valid as an argument to the "branch1" and "branch2" args.
# See https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection

efc.GitDiffController(c).diff_two_branches(
    branch1='devel', # old branch/rev
    branch2='ekr-3435-undo-for-refresh-from-disk', # new branch/rev
    fn='leo/core/leoGlobals.py',  # Don't use back slashes.
)
</t>
<t tx="ekr.20230906100141.11"></t>
<t tx="ekr.20230906100141.12">@language python

# comment.

&lt;&lt; undefined section &gt;&gt;

&lt;&lt; defined section &gt;&gt;

Leo, http://leoeditor.com is an [IDE, outliner and PIM](http://leoeditor.com/preface.html).

- [6.6.3 issues](https://github.com/leo-editor/leo-editor/issues?q=is%3Aissue+milestone%3A6.6.3+)
- 6.6.3 issues: https://github.com/leo-editor/leo-editor/issues?q=is%3Aissue+milestone%3A6.6.3+
- [Documentation](http://leoeditor.com/leo_toc.html)
- [Tutorials](http://leoeditor.com/tutorial.html)

# Link to wikipedia entry
https://en.wikipedia.org/wiki/Leo_(text_editor)

# unl://C:/Users/Edward Ream/ekr.leo#Recent

# This node
# gnx:ekr.20220418190130.1
# Projects
# gnx:ekr.20171027091130.1</t>
<t tx="ekr.20230906100141.13">print('Hi')</t>
<t tx="ekr.20230906100141.14">@language html

&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
// js comment
for (let i = 0; i &lt; cars.length; i++) {
  text += cars[i] + "&lt;br&gt;";
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p1&gt;
&lt;-- html comment --&gt;
This is a test.
&lt;/body&gt;
&lt;/html&gt;</t>
<t tx="ekr.20230906100141.15">@language html

&lt;script&gt;

for (let i = 0; i &lt; cars.length; i++) {
  text += cars[i] + "&lt;br&gt;";
}

&lt;/script&gt;</t>
<t tx="ekr.20230906100141.16">@language javascript

for (let i = 0; i &lt; cars.length; i++) {
  text += cars[i] + "&lt;br&gt;";
}
</t>
<t tx="ekr.20230906100141.17">@language json

{
  "leoHeader": {
    "fileFormat": 2
  },
  "globals": {
    "body_outline_ratio": 0.37926509186351703,
    "body_secondary_ratio": 0.5978391356542617,
    "globalWindowPosition": {
      "height": 929,
      "left": 510,
      "top": 38,
      "width": 841
    }
  },
  "tnodes": {
    "ekr.20201106041444.1": "",
    "ekr.20220225070605.1": "# Trailing whitespace.\n\nunl://C:/Users/Edward Ream/ekr.leo#6.6-b2 checklist\n\n# Bare file name\n\nunl://C:/Users/Edward Ream/ekr.leo#\n\nOpens leoPy.leo\nunl://C:/leo.repo/leo-editor/leo/core/leoPy.leo#=== #2413: ctrl-click unl\nunl://C:/leo.repo/leo-editor/leo/core/leoPy.leo#g.findUNL &amp; helpers--&gt;function: full_match\n\nLocal\nunl://C:/Users/Edward Ream/ekr.leo#test: findUNL\n\n\n# Headline not found\n\nunl://C:/Users/Edward Ream/ekr.leo#xxx_yyy"
  },
  "uas": {
    "ekr.20201106041444.1": "{\"annotate\": {\"priority\": 8, \"prisetdate\": \"2022-03-14\"}, \"icons\": [{\"type\": \"file\", \"file\": \"C:/leo.repo/leo-editor/leo/Icons/cleo/pri8.png\", \"relPath\": \"cleo/pri8.png\", \"where\": \"beforeHeadline\", \"yoffset\": 0, \"xoffset\": 2, \"xpad\": 1, \"on\": \"vnode\", \"cleoIcon\": \"1\"}]}"
  },
  "vnodes": [
    {
      "gnx": "ekr.20201106041444.1",
      "vh": "Recent",
      "status": 1024,
      "children": [
        {
          "gnx": "ekr.20220225070605.1",
          "vh": "test UNLs",
          "status": 1024,
          "children": []
        }
      ]
    }
  ]
}</t>
<t tx="ekr.20230906100141.18">@language md

&lt;!-- comment --&gt;

*Italic*

**Bold**

</t>
<t tx="ekr.20230906100141.21">@language python

def spam():
    a = "abc"
    # Test.
    &lt;&lt; test &gt;&gt;
    &lt;&lt; exists &gt;&gt;
    # https://ethanschoonover.com/solarized/

</t>
<t tx="ekr.20230906100141.22"></t>
<t tx="ekr.20230906100141.23">@language rest

.. comment
.. Should be `@font rest.comment2`

**Bold**
plain rest text.
*Italics*

</t>
<t tx="ekr.20230906100141.24">import os
import time
t1 = time.process_time()
filenames = (
    'leoGlobals.py',
    'leoNodes.py',
)

for filename in filenames:
    path = g.finalize_join(g.app.loadDir, filename)
    assert os.path.exists(path), path
    if 0:  # Use leoAst.
        import leo.core.leoAst as leoAst
        d = {}
        contents = leoAst.read_file(filename)
        tokens = leoAst.make_tokens(contents)
        d [path] = tokens
    else:  # 0.77 sec.
        import asttokens
        d = {}
        with open(path, 'r') as f:
            source = f.read()
        tokens = asttokens.ASTTokens(source, parse=True)
        d [path] = tokens
t2 = time.process_time()
print(f"{(t2-t1):5.2f} sec")
# g.printObj(d, tag=f"{(t2-t1):5.2f} sec")
</t>
<t tx="ekr.20230906100141.25"># g.cls()

from leo.core.leoQt import QtWidgets
# from leo.core.leoQt import QtCore

assert isinstance(c.frame.top, QtWidgets.QMainWindow)

# g.trace(c.frame.top)
iconBar = c.frame.top.iconBar
# g.trace(iconBar)

# c.frame.top.addToolBarBreak(iconBar) ### QtCore.Qt.ToolBarArea.TopToolBarArea)

toolBar2 = QtWidgets.QToolBar()
c.frame.top.addToolBar(toolBar2)

toolBar2.addWidget(QtWidgets.QPushButton("TEST"))</t>
<t tx="ekr.20230906100141.3">&lt;html&gt;
    &lt;head&gt;
      &lt;link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" /&gt;
      &lt;script defer src="https://pyscript.net/latest/pyscript.js"&gt;&lt;/script&gt;
      &lt;style&gt;
        .pulse {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }

        @keyframes pulse {
          0%, 100% {
            opacity: 1;
          }
          50% {
            opacity: .2;
          }
        }
      &lt;/style&gt;
    &lt;/head&gt;

  &lt;body&gt;
    &lt;h1&gt;Let's plot random numbers&lt;/h1&gt;
    &lt;div id="plot"&gt;
      &lt;div class="pulse" &gt;
        &lt;p style='font-family: monospace sans-serif;'&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&amp;#10096;py&amp;#10097;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;py-config&gt;
      packages = [
       "numpy",
       "matplotlib"
      ]
    &lt;/py-config&gt;

    &lt;py-script&gt;
import matplotlib.pyplot as plt
import numpy as np

x = np.random.randn(1000)
y = np.random.randn(1000)

fig, ax = plt.subplots()
ax.scatter(x, y)
pyscript.write('plot', fig)
    &lt;/py-script&gt;
  &lt;/body&gt;
&lt;/html&gt;</t>
<t tx="ekr.20230906100141.4"></t>
<t tx="ekr.20230906100141.5">ksuid</t>
<t tx="ekr.20230906100141.6">uuid</t>
<t tx="ekr.20230906100141.7">Should be default gnx.</t>
<t tx="ekr.20230906100141.8">@language python
"""Change the body font of a node.

Called when the selected node changes.  If the language directive 
in effect is one of the specified ones, change the font family to
one of the specified fonts.  Also change the font if the body
contains lines near the start that begin with ":id:" or ":ref:".
Otherwise change it back to the normal font."""

NOSTYLE = 'LeoQTextBrowser {}'
STYLE = ('LeoQTextBrowser {font-family: Verdana, "Sans-serif";'
                           'font-size: 10pt;}')
LANGS = ('@language rest', '@language md', '@language asciidoc',
         '@language text', '@language plain')
LANGTAGS = ('@rest', '@md', '@rst', '@adoc')
TAGS = (':id:', ':ref:')

def qualifies(b, h):
    """See if we have a qualifying language or tag.

    RETURNS    
    -- True if headline h starts with one of the LANGTAGS.
    -- True if body b has a line starting with a qualifying tag or
        language directive.
    -- -1 if body b has a line starting with "@language" but
        the language is not a qualifying one.
    -- False otherwise.
    """
    if h.startswith(LANGTAGS):
        return True
    lines = b[:300].splitlines()
    lines = [l for l in lines if l.strip()]
    for line in lines:
        if line.startswith('@language'):
            if line.startswith(LANGS):
                return True
            else:
                return -1  # Tri-state logic; not a mistake
        else:
            if line.startswith(TAGS):
                return True
    return False

def set_alt_body_font(tag, keys):
    """Set body font if this node is one of the qualifying node kinds.

    Looks up the tree until a qualifying node is found. Then sets the 
    CSS style based on the qualified language or tag.
    
    Expected to be called by a hook procedure.
    """
    c = keys['c']
    css = NOSTYLE
    # Check if language or special tags qualify
    for p in c.p.self_and_parents():
        found = qualifies(p.b, p.h)
        if found is True:
            css = STYLE
            break
        elif found is not False:  # Tri-state logic!
            break

    editor = c.frame.body.wrapper.widget
    editor.setStyleSheet(css)

ud = g.user_dict
ud['alt_body_font_proc'] = set_alt_body_font

g.registerHandler('select3', ud['alt_body_font_proc'])
</t>
<t tx="ekr.20230906100141.9">@language python
"""Stop Changing the body font of a node.

Reverses the effect of the "change body font" script so that the body
font no longer changes when focus moves to a text/rest/md/etc node.
"""

NOSTYLE = 'LeoQTextBrowser {}'

def set_alt_body_font(tag, keys):
    """Set body font back to the theme's font.
    
    Expected to be called by a hook procedure.
    """
    c = keys['c']
    css = NOSTYLE
    editor = c.frame.body.wrapper.widget
    editor.setStyleSheet(css)

ud = g.user_dict
g.unregisterHandler('select3', ud['alt_body_font_proc'])

ud['alt_body_font_proc'] = set_alt_body_font
g.registerHandler('select3', ud['alt_body_font_proc'])



</t>
<t tx="ekr.20231231043342.1"># Exists: Recent tests
unl:gnx://#ekr.20180311131424.1

# Error mssages (copy to log)
unl:gnx://#ekr.20230622112649.1

# The following will work only if LeoDocs.leo is open!

# In LeoDocs.leo: Leo 6.7.3 release notes
unl:gnx://#ekr.20230409052507.1

# In LeoDocs.leo: ** Read me first **
unl:gnx://#ekr.20050831195449
</t>
<t tx="ekr.20231231164138.1"># These data work on EKR's machine.  Modify for your own!

# lines have the form:
# x.leo: &lt;absolute path to x.leo&gt;

test.leo:    c:/Repos/leo-editor/leo/test
LeoDocs.leo: c:/Repos/leo-editor/leo/doc
</t>
<t tx="ekr.20240226115140.1"># In LeoDocs.leo: Leo 6.7.3 release notes
unl:gnx://../doc/LeoDocs.leo#ekr.20230409052507.1

# In LeoDocs.leo: ** Leo's Documentation **
unl:gnx://../doc/LeoDocs.leo#ekr.20040414161647

# Just open LeoDocs.leo.
unl:gnx://../doc/LeoDocs.leo#</t>
</tnodes>
</leo_file>
