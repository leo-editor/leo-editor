<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="bob.20170828145844.1"><vh>Position-Pair and UNL |Tests|</vh>
<v t="bob.20170828144915.1"><vh>No script UNL, Results UNL</vh>
<v t="bob.20170828144938.1"><vh>Script</vh></v>
</v>
<v t="bob.20170716135450.1"><vh>Tuples - Pos for Script, Pos for Results, no cross file</vh></v>
<v t="bob.20170828151221.1"><vh>Lists - Pos for Script, Pos for Results, no cross file</vh></v>
<v t="bob.20170828150337.1"><vh>Cross-File Pos to file 1 for Script, Cross-file Pos to file 2 for Results</vh></v>
<v t="bob.20170828150425.1"><vh>Cross-file Pos to file 1 for Script, Cross-file Pos to file 1 for Results</vh></v>
<v t="bob.20170828150320.1"><vh>This file Pos for Script, Cross-file Pos for Results</vh></v>
<v t="bob.20170828150232.1"><vh>Cross-file Pos for Script, this file Pos for Results</vh></v>
<v t="bob.20170828150143.1"><vh>Pos for Script, UNL for Results, no cross file</vh></v>
<v t="bob.20170828150210.1"><vh>UNL for Script, Pos for Results, no cross file</vh></v>
<v t="bob.20180110165822.1"><vh>This file UNL for Script, Cross file Pos for Results</vh></v>
<v t="bob.20180110165659.1"><vh>Cross-file Pos for Script, this file UNL for Results</vh></v>
<v t="bob.20170716152318.1"><vh>Script UNL, Results UNL</vh></v>
<v t="bob.20170828141932.1"><vh>Script UNL, no Results UNL</vh>
<v t="bob.20170828142011.1"><vh>Not used</vh></v>
<v t="bob.20170828142017.1"><vh>Results</vh>
<v t="bob.20180403123015.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:30:14 End Time</vh>
<v t="bob.20180403123015.2"><vh>stdout</vh></v>
<v t="bob.20180403123015.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180403122347.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:23:46 End Time</vh>
<v t="bob.20180403122347.2"><vh>stdout</vh></v>
<v t="bob.20180403122347.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180402162311.1"><vh>00:00:00 Elapsed Time. 2018-04-02 16:23:10 End Time</vh>
<v t="bob.20180402162311.2"><vh>stdout</vh></v>
<v t="bob.20180402162311.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180328161411.1"><vh>00:00:01 Elapsed Time. 2018-03-28 16:14:10 End Time</vh>
<v t="bob.20180328161411.2"><vh>stdout</vh></v>
<v t="bob.20180328161411.3"><vh>stderr</vh></v>
</v>
</v>
</v>
</v>
<v t="bob.20180328161823.1"><vh>unl2pos() |Tests|</vh>
<v t="bob.20170910151101.1"><vh>unl2pos() called</vh>
<v t="bob.20170910151221.1"><vh>Script</vh></v>
<v t="bob.20170910152003.1"><vh>Results</vh>
<v t="bob.20180108152347.1"><vh>00:00:01 Elapsed Time. 2018-01-08 15:23:47 End Time</vh>
<v t="bob.20180108152347.2"><vh>stdout</vh></v>
<v t="bob.20180108152347.3"><vh>stderr</vh></v>
</v>
</v>
</v>
<v t="bob.20180112161644.1"><vh>No Error - Pathname, no cmdr</vh></v>
<v t="bob.20180114134641.1"><vh>No Error - No protocol, Pathname, no cmdr</vh></v>
<v t="bob.20180112161706.1"><vh>No Error - No protocol, No Pathname, cmdr</vh>
<v t="bob.20180403122839.1"><vh>Not used</vh></v>
<v t="bob.20180403122847.1"><vh>Results</vh>
<v t="bob.20180403123016.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:30:15 End Time</vh>
<v t="bob.20180403123016.2"><vh>stdout</vh></v>
<v t="bob.20180403123016.3"><vh>stderr</vh></v>
</v>
</v>
</v>
<v t="bob.20180114134749.1"><vh>No Error - Protocol, No Pathname, cmdr</vh>
<v t="bob.20180403122912.1"><vh>Not used</vh></v>
<v t="bob.20180403122917.1"><vh>Results</vh>
<v t="bob.20180403123017.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:30:16 End Time</vh>
<v t="bob.20180403123017.2"><vh>stdout</vh></v>
<v t="bob.20180403123017.3"><vh>stderr</vh></v>
</v>
</v>
</v>
<v t="bob.20180112161736.1"><vh>Error - Protocol, Pathname, cmdr</vh></v>
<v t="bob.20180112161751.1"><vh>Error - Protocol, No pathname, no cmdr</vh></v>
</v>
<v t="bob.20170829113353.1"><vh>UNL Targets</vh>
<v t="bob.20170716140012.1"><vh>Scripts</vh>
<v t="bob.20170716140016.1"><vh>babel script 01</vh></v>
<v t="bob.20180110163226.1"><vh>babel script 02</vh></v>
<v t="bob.20180111135247.1"><vh>babel script 03</vh></v>
<v t="bob.20170829114856.1"><vh>multiple targets</vh></v>
<v t="bob.20170829114907.1"><vh>multiple targets</vh></v>
</v>
<v t="bob.20170716140024.1"><vh>Results</vh>
<v t="bob.20170716140032.1"><vh>babel results 01</vh>
<v t="bob.20180403123007.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:30:06 End Time</vh>
<v t="bob.20180403123007.2"><vh>stdout</vh></v>
<v t="bob.20180403123007.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180403123005.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:30:04 End Time</vh>
<v t="bob.20180403123005.2"><vh>stdout</vh></v>
<v t="bob.20180403123005.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180403122339.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:23:38 End Time</vh>
<v t="bob.20180403122339.2"><vh>stdout</vh></v>
<v t="bob.20180403122339.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180403122337.1"><vh>00:00:00 Elapsed Time. 2018-04-03 12:23:36 End Time</vh>
<v t="bob.20180403122337.2"><vh>stdout</vh></v>
<v t="bob.20180403122337.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180403113846.1"><vh>00:00:01 Elapsed Time. 2018-04-03 11:38:45 End Time</vh>
<v t="bob.20180403113846.2"><vh>stdout</vh></v>
<v t="bob.20180403113846.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180403113844.1"><vh>00:00:01 Elapsed Time. 2018-04-03 11:38:43 End Time</vh>
<v t="bob.20180403113844.2"><vh>stdout</vh></v>
<v t="bob.20180403113844.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180403113842.1"><vh>00:00:01 Elapsed Time. 2018-04-03 11:38:41 End Time</vh>
<v t="bob.20180403113842.2"><vh>stdout</vh></v>
<v t="bob.20180403113842.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180402162302.1"><vh>00:00:00 Elapsed Time. 2018-04-02 16:23:01 End Time</vh>
<v t="bob.20180402162302.2"><vh>stdout</vh></v>
<v t="bob.20180402162302.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180402162301.1"><vh>00:00:00 Elapsed Time. 2018-04-02 16:23:00 End Time</vh>
<v t="bob.20180402162301.2"><vh>stdout</vh></v>
<v t="bob.20180402162301.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180328161144.1"><vh>00:00:01 Elapsed Time. 2018-03-28 16:11:43 End Time</vh>
<v t="bob.20180328161144.2"><vh>stdout</vh></v>
<v t="bob.20180328161144.3"><vh>stderr</vh></v>
</v>
</v>
<v t="bob.20180110163723.1"><vh>babel results 02</vh>
<v t="bob.20180328160238.1"><vh>00:00:01 Elapsed Time. 2018-03-28 16:02:37 End Time</vh>
<v t="bob.20180328160238.2"><vh>stdout</vh></v>
<v t="bob.20180328160238.3"><vh>stderr</vh></v>
</v>
</v>
<v t="bob.20180110165006.1"><vh>babel results 03</vh>
<v t="bob.20180328160813.1"><vh>00:00:01 Elapsed Time. 2018-03-28 16:08:12 End Time</vh>
<v t="bob.20180328160813.2"><vh>stdout</vh></v>
<v t="bob.20180328160813.3"><vh>stderr</vh></v>
</v>
</v>
<v t="bob.20180111145643.1"><vh>Disk Usage</vh>
<v t="bob.20180328155706.1"><vh>00:00:01 Elapsed Time. 2018-03-28 15:57:05 End Time</vh>
<v t="bob.20180328155706.2"><vh>stdout</vh></v>
<v t="bob.20180328155706.3"><vh>stderr</vh></v>
</v>
</v>
<v t="bob.20170829114917.1"><vh>multiple targets</vh>
<v t="bob.20180111151554.1"><vh>00:00:01 Elapsed Time. 2018-01-11 15:15:54 End Time</vh>
<v t="bob.20180111151554.2"><vh>stdout</vh></v>
<v t="bob.20180111151554.3"><vh>stderr</vh></v>
</v>
<v t="bob.20180108162633.1"><vh>00:00:01 Elapsed Time. 2018-01-08 16:26:33 End Time</vh>
<v t="bob.20180108162633.2"><vh>stdout</vh></v>
<v t="bob.20180108162633.3"><vh>stderr</vh></v>
</v>
<v t="bob.20170829120531.1"><vh>00:00:01 Elapsed Time. 2017-08-29 12:05:31 End Time</vh>
<v t="bob.20170829120531.2"><vh>stdout</vh></v>
<v t="bob.20170829120531.3"><vh>stderr</vh></v>
</v>
</v>
<v t="bob.20170829114918.1"><vh>multiple targets</vh></v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="bob.20170716135450.1">@language python

import leo_babel.babel_api as babel_api

cmdr = c
leoG = g
posc = p

shdl = 'babel script 01'
posList = cmdr.find_h(shdl)
if len(posList) != 1:
    raise babel_api.BABEL_ERROR('"{0}" must match exactly one headline'.format(shdl))
babel_script = (cmdr, posList[0])

rhdl = 'babel results 01'
posList = cmdr.find_h(rhdl)
if len(posList) != 1:
    raise babel_api.BABEL_ERROR('"{0}" must match exactly one headline'.format(rhdl))
babel_results = (cmdr, posList[0])
babel_node_creation = True
</t>
<t tx="bob.20170716140012.1"></t>
<t tx="bob.20170716140016.1">@language shell

echo Babel Script 01
</t>
<t tx="bob.20170716140024.1"></t>
<t tx="bob.20170716140032.1"></t>
<t tx="bob.20170716152318.1">@language python

# Note the unnecessary blanks at start and end of each UNL.  These should be ignored.
babel_script = ' unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2001 '

babel_results = ' unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Results--&gt;babel%20results%2001 '
babel_node_creation = True
</t>
<t tx="bob.20170828141932.1">@language python

babel_script = 'unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2001'
babel_node_creation = True
</t>
<t tx="bob.20170828142011.1"></t>
<t tx="bob.20170828142017.1"></t>
<t tx="bob.20170828144915.1">@language python

babel_results = 'unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Results--&gt;babel%20results%2001'
babel_node_creation = True
</t>
<t tx="bob.20170828144938.1">@language shell

ls -l</t>
<t tx="bob.20170828145844.1"></t>
<t tx="bob.20170828150143.1">@language python

unl = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2002"
cmdr, posList = babel.unl2pos(unl)
assert c == cmdr, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_script = (cmdr, posList[0])

babel_results = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Results--&gt;babel%20results%2002"

babel_node_creation = True
</t>
<t tx="bob.20170828150210.1">@language python

babel_script = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2002"

unl = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Results--&gt;babel%20results%2002"
cmdr, posList = babel.unl2pos(unl)
assert c == cmdr, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))

babel_results = (cmdr, posList[0])

babel_node_creation = True
</t>
<t tx="bob.20170828150232.1">@language python

unl = "unl:///pri/git/leo_babel/examples/test_scripts.leo#Test%20Scripts--&gt;Shell%20-%20Disk%20Usage"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected different file but got this file {cf}.'.format(cf=c)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_script = (cmdr, posList[0])

unl = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Results--&gt;Disk%20Usage"
cmdr, posList = babel.unl2pos(unl)
assert c == cmdr, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_results = (cmdr, posList[0])

babel_node_creation = True
</t>
<t tx="bob.20170828150320.1">@language python

unl = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2003"
cmdr, posList = babel.unl2pos(unl)
assert c == cmdr, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_script = (cmdr, posList[0])

unl = "unl:///pri/git/leo_babel/examples/test_results.leo#Test%20Results--&gt;Disk%20Usage"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected different file but got this file {cf}.'.format(cf=c)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_results = (cmdr, posList[0])

babel_node_creation = True
</t>
<t tx="bob.20170828150337.1">@language python

unl = "unl:///pri/git/leo_babel/examples/test_scripts.leo#Test%20Scripts--&gt;Shell%20-%20Disk%20Usage"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected different file but got this file {cf}.'.format(cf=c)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_script = (cmdr, posList[0])

unl = "unl:///pri/git/leo_babel/examples/test_results.leo#Test%20Results--&gt;Disk%20Usage"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected different file but got this file {cf}.'.format(cf=c)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_results = (cmdr, posList[0])

babel_node_creation = True
</t>
<t tx="bob.20170828150425.1">@language python

unl = "unl:///pri/git/leo_babel/examples/test_scripts_results.leo#Scripts%20&amp;%20Results--&gt;Scripts--&gt;Locale"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected different file but got this file {cf}.'.format(cf=c)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_script = (cmdr, posList[0])

unl = "unl:///pri/git/leo_babel/examples/test_scripts_results.leo#Scripts%20&amp;%20Results--&gt;Results--&gt;Locale"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected different file but got this file {cf}.'.format(cf=c)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_results = (cmdr, posList[0])

babel_node_creation = True
</t>
<t tx="bob.20170828151221.1">@language python

cmdr = c
leoG = g
posc = p

shdl = 'babel script 01'
posList = cmdr.find_h(shdl)
if len(posList) != 1:
    raise babel.BABEL_PARAMETER('"{0}" must match exactly one headline'.format(shdl))
babel_script = [cmdr, posList[0]]

rhdl = 'babel results 01'
posList = cmdr.find_h(rhdl)
if len(posList) != 1:
    raise babel.BABEL_PARAMETER('"{0}" must match exactly one headline'.format(rhdl))
babel_results = [cmdr, posList[0]]
babel_node_creation = True
</t>
<t tx="bob.20170829113353.1"></t>
<t tx="bob.20170829114856.1">@language shell

echo Correct target chosen</t>
<t tx="bob.20170829114907.1">@language shell

echo Incorrect target chosen
exit 1</t>
<t tx="bob.20170829114917.1"></t>
<t tx="bob.20170829114918.1"></t>
<t tx="bob.20170829120531.1">0 Subprocess Termination Code</t>
<t tx="bob.20170829120531.2">Was the first results target root in tree order target chosen?
</t>
<t tx="bob.20170829120531.3"></t>
<t tx="bob.20170910151101.1">@language python

unl01 = "unl:///pri/git/leo_babel/examples/test_results.leo#Test%20Results--&gt;Command%20Line%20Arguments"

cmdr, posList = babel.unl2pos(unl01)
assert cmdr == c, 'Unexpected Commander returned: {0}'.format(cmdr)
assert len(posList) == 1, 'Error: UNL matches {0} positions'.format(len(posList))
unlx = posList[0].get_UNL(with_file=False, with_proto=True, with_index=False)
assert unl01 == unlx, 'Unexpected UNL {0}'.format(unlx)

babel_script_args = [cmdr.fileName(), unlx]
</t>
<t tx="bob.20170910151221.1">@language shell

echo $@</t>
<t tx="bob.20170910152003.1"></t>
<t tx="bob.20180108152347.1">0 Subprocess Termination Code</t>
<t tx="bob.20180108152347.2">/pri/git/leo_babel/examples.leo unl:///pri/git/leo_babel/examples.leo#Targets%20for%20UNL's--&gt;Results--&gt;babel%20results%2001
</t>
<t tx="bob.20180108152347.3"></t>
<t tx="bob.20180108162633.1">0 Subprocess Termination Code</t>
<t tx="bob.20180108162633.2">Was the first results target root in tree order target chosen?
</t>
<t tx="bob.20180108162633.3"></t>
<t tx="bob.20180110163226.1">@language shell

pwd</t>
<t tx="bob.20180110163723.1"></t>
<t tx="bob.20180110165006.1"></t>
<t tx="bob.20180110165659.1">@language python

unl = "unl:///pri/git/leo_babel/examples/test_scripts.leo#Test%20Scripts--&gt;Shell%20-%20System%20Version"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected script commander different from current {sf}'.format(sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))
babel_script = (cmdr, posList[0])

babel_results = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Results--&gt;babel%20results%2003"

babel_node_creation = True
</t>
<t tx="bob.20180110165822.1">@language python

babel_script = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2002"

unl = "unl:///pri/git/leo_babel/examples/test_results.leo#Test%20Results--&gt;Results%2002"
cmdr, posList = babel.unl2pos(unl)
assert c != cmdr, 'Expected results commander different from current {sf}'.format(sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))

babel_results = (cmdr, posList[0])

babel_node_creation = True
</t>
<t tx="bob.20180111135247.1">@language shell

du -h</t>
<t tx="bob.20180111145643.1"></t>
<t tx="bob.20180111151554.1">0 Subprocess Termination Code</t>
<t tx="bob.20180111151554.2">Was the first results target root in tree order target chosen?
</t>
<t tx="bob.20180111151554.3"></t>
<t tx="bob.20180112161644.1">@language python

unl = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2001"
cmdr, posList = babel.unl2pos(unl)
assert c == cmdr, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))

babel_script = (cmdr, posList[0])</t>
<t tx="bob.20180112161706.1">@language python

unl = "#UNL Targets--&gt;Scripts--&gt;babel script 01"
cmdrUNL, posList = babel.unl2pos(unl, c)
assert c == cmdrUNL, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))

babel_script = (cmdrUNL, posList[0])</t>
<t tx="bob.20180112161736.1">@language python

unl = "unl:///pri/git/leo_babel/examples/examples_unl.leo#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2001"
cmdrUNL, posList = babel.unl2pos(unl, c)
print('This statement should not be executed.  babel.unl2pos() should raise an exception.')
</t>
<t tx="bob.20180112161751.1">@language python

unl = "unl://#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2001"
cmdr, posList = babel.unl2pos(unl)
print('This statement should not be executed.  babel.unl2pos() should raise an exception.')
</t>
<t tx="bob.20180114134641.1">@language python

unl = "/pri/git/leo_babel/examples/examples_unl.leo#UNL Targets--&gt;Scripts--&gt;babel script 01"
cmdr, posList = babel.unl2pos(unl)
assert c == cmdr, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))

babel_script = (cmdr, posList[0])</t>
<t tx="bob.20180114134749.1">@language python

unl = "unl://#UNL%20Targets--&gt;Scripts--&gt;babel%20script%2001"
cmdrUNL, posList = babel.unl2pos(unl, c)
assert c == cmdrUNL, 'Expected current file {cf}, but got {sf}'.format(cf=c, sf=cmdr)
assert len(posList) == 1, 'Expected on match on UNL {unl}, but got {cnt} matches'.format(unl=unl, cnt=len(posList))

babel_script = (cmdrUNL, posList[0])</t>
<t tx="bob.20180328155706.1">0 Subprocess Termination Code</t>
<t tx="bob.20180328155706.2">35K	.
</t>
<t tx="bob.20180328155706.3"></t>
<t tx="bob.20180328160238.1">0 Subprocess Termination Code</t>
<t tx="bob.20180328160238.2">/pri/git/leo_babel/examples
</t>
<t tx="bob.20180328160238.3"></t>
<t tx="bob.20180328160813.1">0 Subprocess Termination Code</t>
<t tx="bob.20180328160813.2">Linux Z420-2UA31629NP 4.13.0-37-generic #42~16.04.1-Ubuntu SMP Wed Mar 7 16:03:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
</t>
<t tx="bob.20180328160813.3"></t>
<t tx="bob.20180328161144.1">0 Subprocess Termination Code</t>
<t tx="bob.20180328161144.2">Babel Script 01
</t>
<t tx="bob.20180328161144.3"></t>
<t tx="bob.20180328161411.1">0 Subprocess Termination Code</t>
<t tx="bob.20180328161411.2">Babel Script 01
</t>
<t tx="bob.20180328161411.3"></t>
<t tx="bob.20180328161823.1"></t>
<t tx="bob.20180402162301.1">0 Subprocess Termination Code</t>
<t tx="bob.20180402162301.2">Babel Script 01
</t>
<t tx="bob.20180402162301.3"></t>
<t tx="bob.20180402162302.1">0 Subprocess Termination Code</t>
<t tx="bob.20180402162302.2">Babel Script 01
</t>
<t tx="bob.20180402162302.3"></t>
<t tx="bob.20180402162311.1">0 Subprocess Termination Code</t>
<t tx="bob.20180402162311.2">Babel Script 01
</t>
<t tx="bob.20180402162311.3"></t>
<t tx="bob.20180403113842.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403113842.2">total 36
-rw-rw-r-- 1 bob bob  8865 Apr  3 10:53 examples_error.leo
-rw-rw-r-- 1 bob bob  4722 Apr  3 11:07 examples_external.leo
-rw-rw-r-- 1 bob bob  5971 Apr  3 11:25 examples_multi_leo.leo
-rw-rw-r-- 1 bob bob 19004 Apr  3 10:59 examples_no_error.leo
-rw-rw-r-- 1 bob bob 18955 Apr  3 11:26 examples_unl.leo
-rw-rw-r-- 1 bob bob  1817 Apr  2 16:13 externalExamples.txt
-rw-rw-r-- 1 bob bob   131 Mar 31 16:18 md5.sh
-rw-rw-r-- 1 bob bob  3185 Apr  2 16:13 md5.txt
-rw-rw-r-- 1 bob bob   129 Apr  3 11:06 shell_name.sh
-rwxrwxr-x 1 bob bob   551 Jan 20 17:38 slowOutNoFlush.py
-rwxrwxr-x 1 bob bob   542 Jan 20 17:38 slowOut.py
-rwxrwxr-x 1 bob bob   281 Mar 24 10:36 slowOut.sh
-rw-rw-r-- 1 bob bob  3283 Apr  3 11:11 test_results.leo
-rw-rw-r-- 1 bob bob  1767 Apr  3 11:24 test_scripts.leo
-rw-rw-r-- 1 bob bob  2320 Apr  2 16:23 test_scripts_results.leo
</t>
<t tx="bob.20180403113842.3"></t>
<t tx="bob.20180403113844.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403113844.2">Babel Script 01
</t>
<t tx="bob.20180403113844.3"></t>
<t tx="bob.20180403113846.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403113846.2">Babel Script 01
</t>
<t tx="bob.20180403113846.3"></t>
<t tx="bob.20180403122337.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403122337.2">Babel Script 01
</t>
<t tx="bob.20180403122337.3"></t>
<t tx="bob.20180403122339.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403122339.2">Babel Script 01
</t>
<t tx="bob.20180403122339.3"></t>
<t tx="bob.20180403122347.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403122347.2">Babel Script 01
</t>
<t tx="bob.20180403122347.3"></t>
<t tx="bob.20180403122839.1"></t>
<t tx="bob.20180403122847.1"></t>
<t tx="bob.20180403122912.1"></t>
<t tx="bob.20180403122917.1"></t>
<t tx="bob.20180403123005.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403123005.2">Babel Script 01
</t>
<t tx="bob.20180403123005.3"></t>
<t tx="bob.20180403123007.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403123007.2">Babel Script 01
</t>
<t tx="bob.20180403123007.3"></t>
<t tx="bob.20180403123015.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403123015.2">Babel Script 01
</t>
<t tx="bob.20180403123015.3"></t>
<t tx="bob.20180403123016.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403123016.2">Babel Script 01
</t>
<t tx="bob.20180403123016.3"></t>
<t tx="bob.20180403123017.1">0 Subprocess Termination Code</t>
<t tx="bob.20180403123017.2">Babel Script 01
</t>
<t tx="bob.20180403123017.3"></t>
</tnodes>
</leo_file>
